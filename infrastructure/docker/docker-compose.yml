services:
  postgres:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_DB: glade
      POSTGRES_USER: glade
      POSTGRES_PASSWORD: glade_dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U glade"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://glade:glade_dev_password@postgres:5432/glade
      REDIS_URL: redis://redis:6379
      INSTANCE_DOMAIN: localhost:8000
      DEBUG: "True"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../backend:/app/backend
    command: python manage.py runserver 0.0.0.0:8000

  frontend:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

  celery:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.backend
    environment:
      DATABASE_URL: postgresql://glade:glade_dev_password@postgres:5432/glade
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A glade worker --loglevel=info

volumes:
  postgres_data:
  redis_data:
